If the order of concurrency is thread_1, thread_2, thread_1, thread_2, thread_1, thread_2 ... Focusing on put()'s "else" where acts insert, it seems that thread_2's insert always overwrites thread_1's insert, which results in missing keys with only one thread.
However, we ignore that put()'s "if" where acts modifying value of the key. So if the second thread_1 acts modifying, then the second thread_2 will be overwritten by the third thread_1, thus there are missing keys with two threads.
The sequence of events with 2 threads that can lead to a key being missing is the code of insert(), where changes the invariant "entry **p" that always points to the head of the bucket without hold a lock.